library("plyr", lib.loc="~/R/win-library/3.2")
detach("package:plyr", unload=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.2")
install.packages("rmarkdown")
install.packages("markdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
######Section Two.one.one.one
install.packages("dplyr"")
lmao
install.packages("dplyr")
library(dplyr)
c(4,6,6)
10000:1
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
x = 1
# Chunk 3
# Chunk 4
install.packages("stringr")
install.packages("stringr")
install.packages("magrittr")
install.packages("magrittr")
rep(c(1,2), 3)
apply
df = data.frame(a = 1:3, b = 4:6, c=7:9)
df
library(dplyr)
apply(X=df, MARGIN=1, max)
X
df
%in%
c(1,3,7,4) %in% c(1,5,9)
c(1, 5, 9) %in% c(1, 3, 5, 6)
c(1, 5, 9) %in% c(1, 3, 5, 7)
c(1, 5, 9) %in% c(1, 3, 5, 9)
c(1, 5, 9) %in% c(1, 3, 0, 9)
c(1, 5, 9) %in% c(5, 3, 0, 9)
l = list(c(1,2,3), c("a", "b"), c(TRUE, FALSE, TRUE, FALSE))
l[1]
l[[1]]
library(nycflights13)
library(nycflight13)
wdi = read.csv(file.choose(), headers = TRUE)
wdi = read.csv(file.choose(), header = TRUE)
install.packages("WDI")
install.packages("readr")
install.packages("tidyr")
library(WDI)
library(readr)
library(dplyr)
library(tidyr)
wdi.df = wdi
str(wdi.df)
wdi.df %>%
rename(country.code   = `Country Code`,
country.name   = `Country Name`,
indicator.name = `Indicator Name`,
indicator.code = `Indicator Code`) %>%
{.} -> wdi.df
wdi.df = read_csv(file.choose())
str(wdi.df)
wdi.df %>%
rename(country.code   = `Country Code`,
country.name   = `Country Name`,
indicator.name = `Indicator Name`,
indicator.code = `Indicator Code`) %>%
{.} -> wdi.df
wdi.df$indicator.code = factor(wdi.df$indicator.code)
str(wdi.df$indicator.code)
length(unique(wdi.df$indicator.code))
summary(wdi.df$indicator.code)
length(wdi.df$indicator.code)
length(unique(wdi.df$indicator.code))
View(df)
View(wdi)
a = c(1,2,3,4,5)
a
a[:3]
a[,3]
a[1:5]
a
install.packages("shiny")
shiny::runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
install.packages("shinydashboard")
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
install.packages("wbstats")
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
install.packages("plotly")
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
install.packages("lubridate")
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
library(WDI)
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
}
print(source('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-correlation-single/correlation.R')$value)
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
wb.df
summay(wdi.df)
summary(wdi.df)
head(wdi.df)
head(wdi.long.df)
head(wb.long.df)
head(wdi.df)
head(wb.df)
View(wb.df)
runApp('C:/Users/Ross DeWitt/Desktop/Shiny Dashboard/dashboard-example-multi')
library(shiny); runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
runApp('GitHub/MA799_Project1/world_population/app/app_2.R')
setwd("C:/Users/Ross DeWitt/Documents/GitHub/MA799_Project1/world_population")
wb.df = read.csv("./data/wdi.df.csv")
wb.pie2 = filter(wb.pie, 'year' %in% input$year_selected)
wb.pie2 = filter(wb.pie, 'year' %in% input$year_selected)
wb.pie = wb.df[,c('country.names', input$indicator_pie)]
wb.df
head(wb.df)
indicator.codes = c("pop.density", "energy.use", "co2.emission", "GDP", "GDP.growth","pop.0.14", "pop.15.64", "pop.growth", "pop.total" , "pop.rural" ,"pop.urban")
years = c(1992:2011)
dots <- lapply(indicator.codes, as.symbol)
wb.df %>% rename(. , country = country.code) -> wb.df
head(wb.df)
country.codes = sort(unique(wb.df$country))
wb.pie2 = filter(wb.pie, 'year' %in% input$year_selected)
wb.pie = wb.df[,c('country.names', input$indicator_pie)]
wb.pie = wb.df[,c('country.names', 'energy.use')]
wb.pie = wb.df[,c('country', 'energy.use')]
head(wb.pie)
wb.pie2 = filter(wb.pie, 'year' in '1992')
wb.pie2 = filter(wb.pie, 'year' %in% '1992')
wb.pie2
wb.pie
head(wb.pie)
head(wb.df)
wb.pie = wb.df[,c('country', input$indicator_pie), 'year']
wb.pie = wb.df[,c('country', 'energy.use', 'year')]
wb.pie
wb.pie2 = filter(wb.pie, 'year' %in% '1992')
wb.pie2
wb.pie
wb.pie2 = filter(wb.pie, year == 1992)
wb.pie2
runApp('app/app_2.R')
wb.pie3 = wb.df[,c('country', 'energy.use', 'year')]
wb.pie3
wb.pie2 = filter(wb.pie, year == '2000')
wb.pie2
runApp('app/app_2.R')
runApp('app/app_2.R')
wb.pie3
wb.pie2
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
wb.pie = wb.df[,c('country', input$indicator_pie, 'year')]
wb.pie = wb.df[,c('country', 'energy.use', 'year')]
head(wb.pie)
wb.pie2 = filter(wb.pie, year %in% input$year_selected)
wb.pie2 = filter(wb.pie, year %in% 1996)
head(wb.pie2)
wb.pie2
plot_ly(wb.pie3, labels = ~country, values = energy.use, type='pie')
plot_ly(wb.pie3, labels = ~country, values = ~energy.use, type='pie')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
wb.pie = wb.df[,c('country', input$indicator_pie, 'year')]
wb.pie = wb.df[,c('country', 'co2.emission', 'year')]
head(wb.pie)
wb.pie2 = filter(wb.pie, year == input$year_selected)
wb.pie2 = filter(wb.pie, year == 1999)
head(wb.pie2)
wb.pie2
wb.pie3 = wb.pie2[, c('country', 'co2.emission')]
wb.pie3
runApp('app/app_2.R')
runApp('app/app_2.R')
wb.pie2 = filter(wb.df, year %in% input$year_selected)
wb.pie2 = filter(wb.df, year %in% 1999)
head(wb.[ie2])
head(wb.pie2)
runApp('app/app_2.R')
runApp('app/app_2.R')
wb.pie2
plot_ly(wb.pie2, labels=~country, values = ~GDP, type = 'pie')
runApp('app/app_2.R')
plot_ly(wb.pie2, labels=~country, values = ~GDP, type = 'bar')
plot_ly(wb.pie2, type = 'bar')
wb.pie2
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
plot_ly(wb.pie2, labels = wb.pie2$country, values = co2.emission, type='pie')
plot_ly(wb.pie2, labels = wb.pie2$country, values = ~co2.emission, type='pie')
plot_ly(wb.pie2, labels = wb.pie2$country, values = wb.pie2$co2.emission, type='pie')
plot_ly(wb.pie2, type='pie')
plot_ly(wb.pie2, labels= ~co2.emission, values = ~country, type='pie')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
runApp('app/app_2.R')
